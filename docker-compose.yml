#indica la version de Docker Compose utilizada
version: '3.8'
#Bloque de servicios, indica los contenedores a utilizar.
services:

  db:
    image: postgres
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=mocky_data
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./data-h2.sql:/docker-entrypoint-initdb.d/data-h2.sql
      - ./event-h2.sql:/docker-entrypoint-initdb.d/event-h2.sql
      - ./noti-h2.sql:/docker-entrypoint-initdb.d/noti-h2.sql
    networks:
      - red-app

  eureka-server:       #nombre del servicio
    image: aliciac07/eureka-server  #imagen utilizada si viene del registro.
    ports:          #puertos que estaran expuestos.
      - "8761:8080"
    env_file:
      - .env
    networks:    #red para conectar los equipos.
      - red-app
    volumes:
      - my-volume-compose:${DB_VOLUME}

  user-microservice: #nombre del servicio
    image: aliciac07/user-microservice #imagen utilizada si viene del registro.
    ports: #puertos que estaran expuestos.
      - "8083:8080"
    env_file:
      - .env
    environment: #variable de ambiente
      - spring.datasource.url=jdbc:postgresql://db:5432/user_data
      - spring.datasource.username=postgres
      - spring.datasource.password=password
      - eureka.client.serviceUrl.defaultZone='http://eureka-server:8761/eureka'
    networks: #red para conectar los equipos.
      - red-app
    volumes:
      - my-volume-compose:${DB_VOLUME}
    depends_on: #indica que primero debe subir los servicios indicados.
      - db
      - eureka-server

  notification-microservice: #nombre del servicio
    image: aliciac07/user-microservice #imagen utilizada si viene del registro.
    ports: #puertos que estaran expuestos.
      - "8084:8080"
    env_file:
      - .env
    environment: #variable de ambiente
      - spring.datasource.url=jdbc:postgresql://db:5432/notification_data
      - spring.datasource.username=postgres
      - spring.datasource.password=password
      - eureka.client.serviceUrl.defaultZone='http://eureka-server:8761/eureka'
    networks: #red para conectar los equipos.
      - red-app
    volumes:
      - my-volume-compose:${DB_VOLUME}
    depends_on: #indica que primero debe subir los servicios indicados.
      - db
      - eureka-server
networks:  #bloque para las redes
  red-app:   #indicando la red definida

volumes: #Bloque para definir los volumenes
  my-volume-compose:
  volume:
  postgres-data: